@startuml
participant "Client" as Client
participant "Server" as Server
participant "WaitingWriterRedisRepository" as WWriter
participant "Scheduler" as Scheduler
participant "WaitingWriterRedisRepository" as WWriter

== 대기열 등록 요청 ==
Client -> Server: 대기열 등록 요청()
Server -> Server: 요청 유효성 검사
Server -> WWriter: 대기열 등록()
WWriter -> Server: 대기 번호 반환
Server -> Client: 대기번호를 포함한 정보 반환()

== 스케줄러 실행 ==
Scheduler -> Scheduler: handleWaitingUser()

== 분산락 획득 ==
Scheduler -> WReader: acquireLock(lockKey, lockValue, ttl)
alt 락 획득 실패
    WReader -> Scheduler: false
    Scheduler -> Scheduler: return
else 락 획득 성공
    WReader -> Scheduler: true
end

== 대기열 처리 ==
alt 락 획득 성공
    Scheduler -> WWriter: dequeueWaitingUserIdList(1000)
    WWriter -> Scheduler: userIdList
    alt userIdList가 비어 있지 않음
        Scheduler -> WWriter: createValidTokenList(userIdList)
    end
end

== 분산락 해제 ==
Scheduler -> WReader: releaseLock(lockKey, lockValue)
WReader -> Scheduler: release 완료

@enduml
